apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "threshold.fullname" . }}-gateway
  labels:
    app.kubernetes.io/name: {{ include "threshold.name" . }}
    helm.sh/chart: {{ include "threshold.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "threshold.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "threshold.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: gateway
    spec:
      containers:
        - name: gateway
          image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9136
              protocol: TCP

          {{- if and .Values.license.key .Values.license.email }}
          env:
          - name: LICENSE_EMAIL
            valueFrom:
              configMapKeyRef:
                name: {{ include "threshold.fullname" . }}-license
                key: email
          {{- end }}

          # Only serve traffic when ready
          readinessProbe:
            httpGet:
              path: /system/status
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10

          # Triggers restart on failure
          livenessProbe:
            httpGet:
              path: /system/status
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3

          volumeMounts:
            - name: api-volume
              mountPath: /opt/kamara/apis

            {{- if and .Values.license.key .Values.license.email }}
            - name: license-volume
              mountPath: /opt/kamara/license
            {{- end }}

          resources:
            {{- toYaml .Values.gateway.resources | nindent 12 }}

      volumes:
        - name: api-volume
          configMap: # Note: the APIs ConfigMap can be automatically created and managed if using threshold-controller
            name: {{ include "threshold.fullname" . }}-apis

        {{- if and .Values.license.key .Values.license.email }}
        - name: license-volume
          configMap:
            name: {{ include "threshold.fullname" . }}-license
        {{- end }}

      {{- with .Values.gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.gateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.gateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
